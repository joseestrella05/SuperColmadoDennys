@page "/Provedores/Create"
@inject ProvedoreServices provedoresService
@inject NavigationManager navigation

<EditForm Model="Provedor" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card">
            <div class="card-body">

                <div class="section-title">Datos personales</div>

                <div class="row">
                    <div class="col">
                        <label>Nombres *</label>
                        <InputText class="form-control" @bind-Value="Provedor.Nombre" placeholder="Nombre "></InputText>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Dirección *</label>
                        <InputText class="form-control" @bind-Value="Provedor.Direccion" placeholder="Ej. Av. Duarte #10"></InputText>
                    </div>
                </div>

                <div class="section-title">Datos de contacto</div>

                <div class="row">

                    <div class="col">
                        <label>TEL. PRINCIPAL *</label>
                        <InputText class="form-control" @bind-Value="Provedor.Telefono" placeholder="(000) 000-0000"></InputText>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Correo Electrónico</label>
                        <InputText class="form-control" @bind-Value="Provedor.Correo" placeholder="email@gmail.com"></InputText>
                    </div>

                </div>
            </div>

        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-success">Guardar</button>
            <a href="/Provedores/Index" class="btn btn-secondary">Volver</a>
        </div>
    </div>
</EditForm>

@code {
    public Provedores Provedor { get; set; } = new Provedores();
    [Inject] protected ToastService ToastService { get; set; }

    public async Task Crear()
    {
        if (!await Validar())
        {
            await provedoresService.Guardar(Provedor);
            ToastService.Notify(new ToastMessage(ToastType.Success, "Éxito", $"Proveedor creado correctamente."));
            Provedor = new Provedores();
            navigation.NavigateTo("/Provedores/Index");
        }
        else
        {
            ToastService.Notify(new ToastMessage(ToastType.Danger, "Error", "El proveedor ya existe."));
        }
    }

    public async Task<bool> Validar()
    {
        var existeNombre = await provedoresService.BuscarNombres(Provedor.Nombre);
        return existeNombre != null;
    }
}
