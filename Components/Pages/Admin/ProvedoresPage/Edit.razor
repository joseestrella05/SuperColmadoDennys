@page "/Provedores/Edit/{ProvedorId:int}"
@using Microsoft.AspNetCore.Authorization
@inject ProvedoreServices provedoresService
@inject NavigationManager navigation
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="provedores" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card">
            <div class="card-body">
                <div class="text-center">
                    <InputFile class="form-control" multiples />
                    <label class="form-label">Seleccionar una imagen</label>
                </div>

                <div class="section-title">Datos personales</div>

                <div class="row">
                    <div class="col">
                        <label>Nombres *</label>
                        <InputText class="form-control" @bind-Value="provedores.Nombre" placeholder="Nombre "></InputText>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Dirección *</label>
                        <InputText class="form-control" @bind-Value="provedores.Direccion" placeholder="Ej. Av. Duarte #10"></InputText>
                    </div>
                </div>

                <div class="section-title">Datos de contacto</div>

                <div class="row">

                    <div class="col">
                        <label>TEL. PRINCIPAL *</label>
                        <InputText class="form-control" @bind-Value="provedores.Telefono" placeholder="(000) 000-0000"></InputText>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Correo Electrónico</label>
                        <InputText class="form-control" @bind-Value="provedores.Correo" placeholder="email@gmail.com"></InputText>
                    </div>

                </div>
            </div>

        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-success">Guardar</button>
            <a href="/Provedores/Index" class="btn btn-secondary">Volver</a>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int ProvedorId { get; set; }
    public Provedores provedores { get; set; } = new Provedores();
    private Provedores provedorOriginal { get; set; } = new Provedores();

    [Inject] protected ToastService ToastService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        provedores = await provedoresService.Buscar(ProvedorId);
        if (provedores != null)
        {
            // Clonar el estado original para comparar después
            provedorOriginal = new Provedores
                {
                    ProvedorId = provedores.ProvedorId,
                    Nombre = provedores.Nombre,
                    Direccion = provedores.Direccion,
                    Telefono = provedores.Telefono,
                    Correo = provedores.Correo
                };
        }
    }

    public async Task Crear()
    {
        if (SinCambios())
        {
            ToastService.Notify(new(ToastType.Warning, "Atención", "Por favor, modifique un valor antes de guardar."));
            return;
        }

        if (!await Validar())
        {
            await provedoresService.Guardar(provedores);
            ToastService.Notify(new(ToastType.Success, "Éxito", "Proveedor editado correctamente."));
            navigation.NavigateTo("/Provedores/Index");
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, "Error", "El proveedor ya existe."));
        }
    }

    private bool SinCambios()
    {
        return provedorOriginal.Nombre == provedores.Nombre &&
               provedorOriginal.Direccion == provedores.Direccion &&
               provedorOriginal.Telefono == provedores.Telefono &&
               provedorOriginal.Correo == provedores.Correo;
    }

    public async Task<bool> Validar()
    {
        var existeNombre = await provedoresService.BuscarNombres(provedores.Nombre);

        if (existeNombre == null)
            return false;

        if (existeNombre.ProvedorId == provedores.ProvedorId)
            return false;

        return true;
    }
}